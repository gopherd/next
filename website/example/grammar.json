{
    "context": {
        "annotations": {
            "message": {
                "name": "message",
                "description": "Sets the declaration as a message.",
                "parameters": [
                    {
                        "name": "type",
                        "description": "Sets the message type id",
                        "type": "int",
                        "validators": [
                            {
                                "name": "MessageTypeMustBePositive",
                                "expression": "{{gt . 0}}",
                                "message": "must be positive"
                            }
                        ]
                    },
                    {
                        "name": "req",
                        "description": "Sets the message as a request.",
                        "type": "bool"
                    }
                ]
            },
            "deprecated": {
                "name": "deprecated",
                "description": "Sets the declaration as deprecated.",
                "parameters": [
                    {
                        "name": "message",
                        "description": "Sets the deprecation message.",
                        "type": "string"
                    }
                ]
            },
            "next@const": {
                "name": "next",
                "description": "Built-in annotation for the next compiler.",
                "parameters": [
                    "available"
                ]
            },
            "next@enum": {
                "name": "next",
                "description": "Built-in annotation for the next compiler.",
                "parameters": [
                    "available",
                    "type"
                ]
            },
            "next@enum.member": {
                "name": "next",
                "description": "Built-in annotation for the next compiler.",
                "parameters": [
                    "available"
                ]
            },
            "next@interface": {
                "name": "next",
                "description": "Built-in annotation for the next compiler.",
                "parameters": [
                    "available",
                    "*_alias"
                ]
            },
            "next@interface.method": {
                "name": "next",
                "description": "Built-in annotation for the next compiler.",
                "parameters": [
                    "available",
                    "mut",
                    "error"
                ]
            },
            "next@interface.method.parameter": {
                "name": "next",
                "description": "Built-in annotation for the next compiler.",
                "parameters": [
                    "mut",
                    "*_type"
                ]
            },
            "next@package": {
                "name": "next",
                "description": "Built-in annotation for the next compiler.",
                "parameters": [
                    "available",
                    "*_package",
                    "*_imports"
                ]
            },
            "next@struct": {
                "name": "next",
                "description": "Built-in annotation for the next compiler.",
                "parameters": [
                    "available",
                    "*_alias"
                ]
            },
            "next@struct.field": {
                "name": "next",
                "description": "Built-in annotation for the next compiler.",
                "parameters": [
                    "available",
                    "*_type"
                ]
            },
            "optional": {
                "name": "optional",
                "description": "Sets the field as optional.",
                "parameters": [
                    {
                        "name": "default",
                        "description": "Sets the default value for optional fields.",
                        "type": "string"
                    }
                ]
            },
            "required": {
                "name": "required",
                "description": "Sets the field as required."
            }
        },
        "annotation_parameters": {
            "*_alias": {
                "name": ".+_alias",
                "description": "Sets the alias name for target languages.",
                "type": "string"
            },
            "*_imports": {
                "name": ".+_imports",
                "description": "Sets the import declarations for target languages.",
                "type": "string"
            },
            "*_package": {
                "name": ".+_package",
                "description": "Sets the package name for target languages.",
                "type": "string",
                "validators": [
                    {
                        "name": "LangPackageMustNotBeEmpty",
                        "expression": "{{ne . ``}}",
                        "message": "must not be empty"
                    }
                ]
            },
            "*_type": {
                "name": ".+_type",
                "description": "Sets the type name for target languages.",
                "type": "string"
            },
            "available": {
                "name": "available",
                "description": "Sets the available expression for the declaration.",
                "type": "string"
            },
            "error": {
                "name": "error",
                "description": "Indicates the method returns an error.",
                "type": "bool"
            },
            "mut": {
                "name": "mut",
                "description": "Sets object or parameter as mutable.",
                "type": "bool"
            },
            "type": {
                "name": "type",
                "description": "Sets the type for enum members.",
                "type": "type"
            }
        },
        "validators": null
    },
    "package": {
        "annotations": [
            "next@package",
            "deprecated"
        ]
    },
    "import": {},
    "const": {
        "types": [
            "bool",
            "int",
            "float",
            "string"
        ],
        "annotations": [
            "next@const",
            "deprecated"
        ]
    },
    "enum": {
        "annotations": [
            "next@enum",
            "deprecated"
        ],
        "member": {
            "types": [
                "int",
                "float",
                "string"
            ],
            "annotations": [
                "next@enum.member",
                "deprecated"
            ]
        }
    },
    "struct": {
        "annotations": [
            "next@struct",
            "deprecated",
            "message"
        ],
        "field": {
            "annotations": [
                "next@struct.field",
                "deprecated",
                "required",
                "optional"
            ]
        }
    },
    "interface": {
        "annotations": [
            "next@interface",
            "deprecated"
        ],
        "method": {
            "annotations": [
                "next@interface.method",
                "deprecated"
            ],
            "parameter": {
                "annotations": [
                    "next@interface.method.parameter",
                    "deprecated"
                ]
            }
        }
    }
}
