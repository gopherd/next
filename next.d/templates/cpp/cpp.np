{{- define "next.cpp.package" -}}
{{render "cpp.header" . -}}
{{- end}}

{{- define "next.cpp.file" -}}
{{render "cpp.header" . -}}
{{- end}}

{{- define "next.cpp.header" -}}
#pragma once
{{next .Imports -}}
{{render "cpp.namespace.begin" . -}}
{{render "cpp.forward.declarations" . -}}
{{render "cpp.range.specs" . -}}
{{render "cpp.namespace.end" . -}}
{{- end}}

{{- define "next.cpp.imports" -}}
#include <string>
#include <vector>
#include <map>
#include <cstdint>
{{- range $p := .Packages}}
{{- if len $p.Types}}
#include "{{$p.Name}}.h"
{{- end}}
{{- end}}
{{- end}}

{{- define "next.cpp.namespace.begin" -}}
{{- $namespace := ((.Annotations.Lookup "next").Param "cpp_namespace").Value -}}
{{- if $namespace}}
namespace {{unquote $namespace.String}} {
{{- end}}
{{- end}}

{{- define "next.cpp.namespace.end" -}}
{{- $namespace := ((.Annotations.Lookup "next").Param "cpp_namespace").Value -}}
{{- if $namespace}}
} // namespace {{unquote $namespace.String}}
{{- end}}
{{- end}}

{{- define "next.cpp.forward.declarations" -}}
{{- if .Enums}}
// Enums forward declarations
{{- range .Enums}}
enum class {{.Name}};
{{- end}}
{{- end}}
{{- if .Structs}}

// Classes forward declarations
{{- range .Structs}}
class {{.Name}};
{{- end}}
{{- end}}

{{- end}}

{{- define "next.cpp.range.specs" -}}
{{- if .Consts -}}
{{render "cpp.range.consts" .}}
{{ end -}}
{{- if .Enums -}}
{{render "cpp.range.enums" .}}
{{ end -}}
{{- if .Structs -}}
{{render "cpp.range.structs" .}}
{{- end -}}
{{- end }}

{{- define "next.cpp.range.consts" -}}
{{range .Consts}}
{{next . -}}
{{- end}}
{{- end}}

{{- define "next.cpp.range.enums" -}}
{{range $i, $e := .Enums}}
{{if $i}}{{print "\n"}}{{end}}{{next . -}}
{{- end}}
{{- end}}

{{- define "next.cpp.range.structs" -}}
{{range $i, $s := .Structs}}
{{if $i}}{{print "\n"}}{{end}}{{next . -}}
{{- end}}
{{- end}}

{{- define "next.cpp.const" -}}
{{.Doc.Text | align}}constexpr auto {{.Name}} = {{.Value}};{{alignEnd .Comment.Text}}
{{- end}}

{{- define "next.cpp.enum" -}}
{{.Doc.Text | align}}enum class {{.Name}} : int {
{{- range .Members}}
    {{next . -}}
{{- end}}
};
{{- end}}

{{- define "next.cpp.enum.member" -}}
{{.Doc.Text | align}}{{.Name}} = {{.Value}},{{alignEnd .Comment.Text}}
{{- end}}

{{- define "next.cpp.struct" -}}
{{.Doc.Text}}class {{.Name}} {
public:
    {{.Name}}() = default;
    ~{{.Name}}() = default;
    {{render "cpp.range.struct.fields" .}}
};
{{- end}}

{{- define "next.cpp.range.struct.fields" -}}
{{- range .Fields}}
    {{next . -}}
{{- end}}
{{- end}}

{{- define "next.cpp.struct.field" -}}
{{.Doc.Text | align}}{{type .Type}} {{.Name | camelCase}};{{alignEnd .Comment.Text}}
{{- end}}